This project requires
	-ArcGIS 9.3 and 10 with the .Net SDK
	-Visual Studio 2008 SP1 (not the express edition)
	-.Net Framework 3.5 SP1
	
The ArcGIS Visual Studio extensions are optional but useful for development
The help files are built with Microsoft's Sandcastle framework along with the Sandcastle Help File Builder.

For the Sandcastle Help File Builder (v.1.8.0.2), make sure to add the Code block component in the ComponentConfigurations
and set the default languate to VB.net or else all the code comments will be C#.  The graphs are made using yEd 3.6

Arc9/Arc10 Support:
The project can be compiled for ArcGIS 9.x or ArcGIS 10 by selecting the appropriate solution configuration.
When compiling for Arc9, compilation must be on a system with Arc9.  When compiling for Arc10, compilation
must be on a system with Arc10.  Due to the way the solutions configurations are set, there will be warnings
from the IDE that certain libraries can't be found.  For example, when compiling for Arc9, there will be 
warnings that certain Arc10 libraries are not found.  These can be safely ignored, the program compiles correctly.
In order to modify the libraries so that the solution configurations work, it is necessary to edit the corresponding
project's .vbproj file and add the references manually, with a conditional compilation option depending on the
selected solution config (see the .vbproj files for the exact syntax)

Visual Studio:
You may need to add the solution configuration dropdown to the toolbar to be able to quickly
switch build configs. Do this by searching for it under the Build category when customizing the
toolbars.  Visual studio must be run with administrative permission on windows 7 so that the 
script register.cmd in the ArcMapCommand folder runs successfully. Else you will get errors
about not being able to write to the registry.

Build notes:
1.	The first time the project is opened, be sure to build it prior to opening any of the forms in the
	form designer.  Since there are custom controls, the designer will complain that the controls can't be found
	unless the project is built first
2.	when compiling, make sure that the most recent version of all the libraries have been copied to
	the output folder of ArcMapCommand. This can be verified by chekcing the file time stamps.  If
	the latest version is not used, any changes you made to the sources code wont be reflected in
	the actual behaviour of the program leading to believe there is a bug when in fact its just a matter
	of not using the latest library.
3.  the startup project of the solution is set to be ArcMapCommand. This is the library that is called 
	by arc map.  All of the other libraries must be in the same folder as this library.  There are
	some post build scripts that take care of this in combination with setting project references.
	When deplyoing you should ensure that this requirement is met.
4.	The target of all dlls is set to x86. This is to ensure proper interaction with ArcObjects sinec
	ArcObjects is not 64 bit. Without this can get some strange errors sometimes. Especially with remoting
5.	Remoting:
	5.1 The transport calculation is run using a wrapper that runs the libraries in batch mode under their
		own memory space. This is done to avoid  memory limitations when running as part of the ArcMap proces
		Note that with remoting, it is very difficult to pass reference types that already declared not serializable.
		because of this, it is not possible to pass the reference to the arcmap application to an external program.
		(actually it is possible and methods that only require passing simple types, such as setting the application
		caption, work in the remoted application but when it comes time to pass a reference to an object, e.g. a Raster, 
		it won't work because Raster is not serializable.  In order to make it work through remoting it would be necessary
		to write a surrogate for it, essentially wrapping the Raster in a class that manually handles serialization
		and de-serialization.).  
	5.2 relevant links:
		http://msdn.microsoft.com/en-us/library/aa366778(VS.85).aspx - max amount of addressable memory by operating system
		http://www.codeproject.com/KB/XML/remotingsimpleeng.aspx - Good intro to remoting

WARNING!!!
1.	For some reason (probably due to compiler optimizations that I cant disable), compiling the project using the
	Release profile will screw up COM calls/memory management resulting in strange errors that don't occur when using the Debug build.
	As a result, always enable debugging options in the compiler settings!!

2.	When using workspacefactory objects, make sure only one workspacefactory is created in the application. Also, 
	don't release this workspace object with ComReleaser since attempting to access it later (even after creating
	another one with New) will give errors like 'RCW has been separated from its interface'. This is because 
	ShapefileWorkspaceFactories and RasterWorkspaceFactories are singleton objects meaning only one can exist at a time.
	In ArcNlet_UA, workspace factories are created for the whole program and are not released.  Because utitlity functions
	make use of workspaces as well (e.g., the createShapefile and createRasterFromFile of the AqDn.Utilities class),
	these utility functions must not use New to get a workspace factory. Instead they must use an Activator to get the
	instance. They must not release the instance returned by the activator since it may cause problems when other
	functions try to obtain a reference to the same workspace.  Although the documentation suggests that this is only
	a problem for multithreaded apps, I came across these issues in ArcNLET_UA, even after I removed the multithreading.
	See: http://help.arcgis.com/en/sdk/10.0/arcobjects_net/conceptualhelp/index.html#//00010000043p000000

Other notes:
1.	Sometimes, the Options cutout in the transport tab will go underneath the main group box causing the nice
	groupbox cutout lines to reappear.  This is purely cosmetic but it can be fixed by making sure the 
	GBTrOptions_Cutout_LL control is below GbTrOptions but in front of the Input Layers group box
	

 
When debugging with VS2008 SP1, the debugger may skip lines. TO fix this, set the CPU affinity
to a single processor for devenv.exe