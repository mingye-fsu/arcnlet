''' <summary>
''' This class is instantiated into the Remoting server's process. It receives communications
''' from the Remoting client (output data and notifications of when the wrapper has terminated)
''' from a RemotingBootstrapper object.
''' It also sends data to the client in the form of InParams which are the parameters
''' required by the particular module being executed by the RemotingBootstrapper. The
''' InParams and OutParams are accessed by the Wrapper directly and not through the 
''' Bootstrapper.
''' </summary>
''' <remarks>This object must not be destroyed before the Wrapper has fully exited</remarks>
Public Class ModuleRunRemote
    Inherits MarshalByRefObject
    Implements IAqDnApplication.IModuleRunRemote

    'array of params. set by the main UI, retrieved by the transport wrapper
    Private Shared m_params As Hashtable
    Private Shared m_outparams As Hashtable

    'the instance of the mainform to communicate with
    'this object must have a transportCalculationCompleted(msg as string) and
    'a transportProcessTerminated(msg as string) method
    Private Shared m_f As Object

    'keeps track of the indent level when outputing to Trace
    'from remoted calls. This is set by the object creating the instance
    'of this class immediately after the object is created.
    'For some reason, this variable
    'would only 'stick' across instances when set via a property and not 
    'via the constructor.
    Private Shared m_indent As Integer

    ''' <summary>
    ''' the constructor called by remoting
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub New()
        MyBase.new()
    End Sub

    ''' <summary>
    ''' The constructor called by Mainform
    ''' </summary>
    ''' <param name="f"></param>
    ''' <remarks></remarks>
    Public Sub New(ByVal f As Object)
        MyBase.New()
        m_f = f
        'reset the global indent when multiple instances of this class are created
        'this prevents the wrong indent from being set if ArcNLET and ArcNLET_UA are
        'run simultaneously
        m_indent = 0
    End Sub

    ''' <summary>
    ''' Used by the 
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property Indent() As Integer Implements IAqDnApplication.IModuleRunRemote.Indent
        Get
            Return m_indent
        End Get
        Set(ByVal value As Integer)
            m_indent = value
        End Set
    End Property

    ''' <summary>
    ''' called by the transport wrapper after inizialization to set the channel
    ''' that we should look for if we want to cancel the operation
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks>Not implemented</remarks>
    Public Property CancelChannelURI() As String Implements IAqDnApplication.IModuleRunRemote.CancelChannelURI
        Get
            Return ""
        End Get
        Set(ByVal value As String)
        End Set
    End Property


    ''' <summary>
    ''' params that the wrapper will retrieve
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property InParams() As Hashtable Implements IAqDnApplication.IModuleRunRemote.InParams
        Get
            Return m_params
        End Get
        Set(ByVal value As Hashtable)
            m_params = value
        End Set
    End Property

    ''' <summary>
    ''' Output params that the wrapper will set
    ''' </summary>
    ''' <value></value>
    ''' <returns>The output parameters. If there are none the hash table will be empty</returns>
    ''' <remarks></remarks>
    Public Property OutParams() As Hashtable Implements IAqDnApplication.IModuleRunRemote.OutParams
        Get
            Return m_outparams
        End Get
        Set(ByVal value As Hashtable)
            'copy the values to the local hashtable since they will
            'no longer be accessible once the wrapper closes
            'a shallow copy clone will work since the hashtable should
            'not be storing any object references, only primitive types
            m_outparams = value.Clone
        End Set
    End Property

    ''' <summary>
    ''' Receives trace messages forwarded by the wrapper
    ''' </summary>
    ''' <param name="msg">The message</param>
    ''' <param name="indentlevel">The indent level the message should be at</param>
    ''' <remarks></remarks>
    Public Sub TraceOutput(ByVal msg As String, ByVal indentlevel As Integer)
        Try
            'Trace.indentlevel is the current indent level of trace
            'Indent is the 'global' indent level present when this instance
            'of this class was created. indentLevel is the 'local' level
            'of indent generated by the remoted function.
            Trace.IndentLevel = Trace.IndentLevel + Indent + indentlevel
            Trace.WriteLine(msg)
            Trace.IndentLevel = Trace.IndentLevel - Indent - indentlevel
        Catch ex As Exception
            'ignore errors            
        End Try
    End Sub

    ''' <summary>
    ''' Called by the wrapper to inform that the calculation is complete
    ''' </summary>
    ''' <param name="msg">return message</param>
    ''' <remarks></remarks>
    Public Sub CalculationComplete(ByVal msg As String) Implements IAqDnApplication.IModuleRunRemote.CalculationComplete
        'call the sub in the main form informing that the calculation is complete
        'the m_f object must have this method or else an exception will be thrown
        m_f.CalculationCompleted(msg)
    End Sub

    ''' <summary>
    ''' Called by the bootstrapper to notify us that the transport process has terminated
    ''' </summary>
    ''' <param name="msg"></param>
    ''' <remarks></remarks>
    Public Sub WrapperProcessTerminated(ByVal msg As String) Implements IAqDnApplication.IModuleRunRemote.WrapperProcessTerminated
        'notify the server that the process has terminated.
        'the m_f object must have this method or else an exception will be thrown
        m_f.ProcessTerminated(msg)
    End Sub

    Public Overrides Function InitializeLifetimeService() As Object
        'prevent this remoted object from being destroyed after a period of inactivity
        'see http://blogs.microsoft.co.il/blogs/sasha/archive/2008/07/19/appdomains-and-remoting-life-time-service.aspx
        Return Nothing
    End Function

End Class
