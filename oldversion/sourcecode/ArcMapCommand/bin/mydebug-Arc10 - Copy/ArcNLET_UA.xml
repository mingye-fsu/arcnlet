<?xml version="1.0"?>
<doc>
<assembly>
<name>
ArcNLET_UA
</name>
</assembly>
<members>
<member name="M:ArcNLET_UA.SpatialParameter.#ctor(System.String,ESRI.ArcGIS.Geodatabase.IDataset,System.String,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="name">The name of the parameter</param>
	<param name="dataset">The associated feature class or raster dataset</param>
	<param name="paramFieldName">The field within the dataset containing the parameter values</param>
	<param name="convertToRaster">This is a flag for ArcNLET. Set it to true if this parameter should be converted
 to raster prior to passing it to ArcNLET. This flag is only used for FeatureClass type datasets</param>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialParameter.ConvertToRaster">
	<summary>
 Indicates whether this spatial parameter should be converted to raster before passing it to ArcNLET
 If the dataset is already a raster, this property is always false
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialParameter.Dataset">
	<summary>
 Returns the parameter's associated FeatureClass or RasterDataset 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialParameter.OutFieldName">
	<summary>
 The name of the field whose values are to be taken as the value of the parameter
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialParameter.FullName">
	<summary>
 Returns the full name and path of the dataset
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ArcNLET_UA.SpatialParameter">
	<summary>
 Represents a parameter that is spatially heterogeneous but is not a random variable
 </summary>
	<remarks></remarks>
</member><member name="F:ArcNLET_UA.ListViewColumnSorter.ColumnToSort">
	<summary>
 Specifies the column to be sorted
 </summary>
</member><member name="F:ArcNLET_UA.ListViewColumnSorter.OrderOfSort">
	<summary>
 Specifies the order in which to sort (i.e. 'Ascending').
 </summary>
</member><member name="F:ArcNLET_UA.ListViewColumnSorter.ObjectCompare">
	<summary>
 Case insensitive comparer object
 </summary>
</member><member name="M:ArcNLET_UA.ListViewColumnSorter.#ctor">
	<summary>
 Class constructor.  Initializes various elements
 </summary>
</member><member name="M:ArcNLET_UA.ListViewColumnSorter.Compare(System.Object,System.Object)">
	<summary>
 This method is inherited from the IComparer interface.  It compares the two objects passed using a case insensitive comparison.
 </summary>
	<param name="x">First object to be compared</param>
	<param name="y">Second object to be compared</param>
	<returns>The result of the comparison. "0" if equal, negative if 'x' is less than 'y' and positive if 'x' is greater than 'y'</returns>
</member><member name="P:ArcNLET_UA.ListViewColumnSorter.SortColumn">
	<summary>
 Gets or sets the number of the column to which to apply the sorting operation (Defaults to '0').
 </summary>
</member><member name="P:ArcNLET_UA.ListViewColumnSorter.Order">
	<summary>
 Gets or sets the order of sorting to apply (for example, 'Ascending' or 'Descending').
 </summary>
</member><member name="T:ArcNLET_UA.ListViewColumnSorter">
	<summary>
 This class is an implementation of the 'IComparer' interface.
 </summary>
</member><member name="M:ArcNLET_UA.StatDistributions.requiresMode(ArcNLET_UA.StatDistributions.Distribution)">
	<summary>
 Determines whether the given distribution requires the Mode parameter
 </summary>
	<param name="dist">The distribution to test</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.StatDistributions.getShortName(ArcNLET_UA.StatDistributions.Distribution)">
	<summary>
 Returns a short abbreviation for each distribution
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ArcNLET_UA.StatDistributions">
	<summary>
 A list of statistical distributions for use with the LHS program
 </summary>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.PGAllParams.#ctor(System.Windows.Forms.PropertyGrid)">
	<summary>
 Constructor
 </summary>
	<param name="pg">The parent PropertyGrid control that this class is assigned to</param>
	<remarks>the parent PropertyGrid must be passed in so that we can programatically
 refresh the PropertyGrid whenever an attribute changes</remarks>
</member><member name="T:ArcNLET_UA.PGAllParams">
	<summary>
 Parameter class for the property grid. Note that parameters of type single have been defined
 as properties of type string so that setting the DefaultValue does not result in the default
 value being bolded. Only values that have changed from the default should be bolded.
 </summary>
	<remarks>http://www.codeproject.com/Articles/2764/Using-PropertyGrid-Part-I
 </remarks>
</member><member name="P:ArcNLET_UA.ArcNLETUAProject.NumRealizationsToProcess">
	<summary>
 The number of realizations available for processing in the project file.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.ArcNLETUAProject.numRealizations">
	<summary>
 The total number of realizations
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.ArcNLETUAProject.#ctor(System.Int32,System.Int32,System.String)">
	<summary>
 this constructor is called when it is desired to write the project file.
 addSpatialRandomVariable, addSpatialRandomVariableRealizationFile, and/or addArcNLETRealizationProj
 must be called prior to writeProjectFile if the project file is to have something in it.
 </summary>
	<param name="NumRealizations">The total number of realizations generated by LHS</param>
	<param name="fileNameAndPath"></param>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.ArcNLETUAProject.#ctor(System.String)">
	<summary>
 This constructor is called when it is desired to read an existing project
 </summary>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.ArcNLETUAProject.getRealizationFromFileName(System.String)">
	<summary>
 Extracts the realization number from the given file name. The expected
 naming convention is that the realization number is contained immediately
 before the file extension and immediately after an underscore. E.g.,
    {somefile}_{realizationNumber}.{extension}
 or with an _info suffix
    {somefile}_{realizationNumber}_info.{extension}
 </summary>
	<param name="fname">The file name or path+filename to extract</param>
	<returns>The realization number. Throws an exception on error</returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.Main.App">
	<summary>
 The currently running ArcMap application instance
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.Main.ActiveDoc">
	<summary>
 The currently loaded document.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.Main.ActiveDocFullName">
	<summary>
 The path and name of the currently loaded document.  If no document is loaded, N/A is returned.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.Main.ActiveDocPath">
	<summary>
 The full path without filename of the current document
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.Main.ActiveMap">
	<summary>
 The first map in the maps collection of the active document.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.Main.init(ESRI.ArcGIS.ArcMapUI.IMxApplication2)">
	<summary>
 Initializes the ArcMap application reference
 </summary>
	<param name="ArcMapApplication">The reference to the application</param>
	<remarks>This function MUST be called before most classes in this namespace are used since many
 of those classes use this Main class to extract information from ArcMap. The only exceptions
 are the Core classes since they have been abstracted so that they are callable as stand alone
 libraries</remarks>
</member><member name="T:ArcNLET_UA.Main">
	<summary>
 This class holds shared members that extract properties and values from the 
 main ArcMap reference that is passed in via the init() sub
 </summary>
	<remarks>The init sub must be called before most classes in this namespace are used.  The exception
 is the ParticleTracker and Transport classes since they have been constructed as stand alone libraries. Ideally the all the Core classes
 including DarcyFlow should behave this way as well but this is left as a future improvement (only minor modifications are 
 needed to remove the dependency on the functions to output to raster layers. Follow the
 same approach as the Transport class)</remarks>
</member><member name="M:ArcNLET_UA.TraceOutput.#ctor(System.Windows.Forms.TextBox)">
	<summary>
 Constructor.
 </summary>
	<param name="destTxtBox">The texbox to which the output will be written.
 Delegates are used for thread safety according to Microsoft's documentation.
 </param>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.TraceOutput.close">
	<summary>
 Used to properly unload the custom trace listener
 </summary>
	<remarks>This function should be called when the program exits.  It is necessary because
 arcgis won't immediately dispose of the application object, thereby leaving the trace listener
 active.  When a new call to trace.write is made, the old trace listener will try to write to
 a textbox that has been diposed already.  By unloading the trace listener when the main form closes,
 we will avoid this problem.
 </remarks>
</member><member name="T:ArcNLET_UA.TraceOutput">
	<summary>
 this class displays calls to trace.write and trace.writeline in a given textbox
 this class is thread-safe.
 </summary>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.MonteCarlo.#ctor(ArcNLET_UA.ArcNLETUAProject,ESRI.ArcGIS.Geodatabase.IFeatureClass,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.ComponentModel.BackgroundWorker)">
	<summary>
 Constructor
 </summary>
	<param name="proj">The arcnlet_UA project file generated previously</param>
	<param name="monitoringPts">The set of monitoring points to extract concentration values</param>
	<param name="keepTheseRealizations">Out of the total number of realizations, keep only these ones
 the rest will be (attempted to) be deleted. This list is a subset of 
 processOnlyTheseRealizations. This means that if a particular realization
 is not in processOnlyTheseRealizations it will not be deleted, even if it is omitted from this list</param>
	<param name="worker">If specified, represents the background worker associated with this particular
 monte carlo run. If not specified, the monte carlo run will not receive cancellation notifications
 from the worker and cannot send progress notifications to the worker</param>
	<param name="processOnlyTheseRealizations">Only consider these realizations for processing.
 If not specified, defaults to all realizations</param>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.MonteCarlo.extractRasterValueToMonitoringPts(ESRI.ArcGIS.DataSourcesRaster.IRaster2,System.String,System.Int32)">
	<summary>
 Extracts the value of the given raster to each monitoring point in the m_monitoringPts feature class
 to the MonitorPtsOutput.shp file. 
 </summary>
	<param name="r">The reaster to extract a value from</param>
	<param name="varName">The variable name that the raster corresponds to. This value is only
 used as the column lable for MonitorPtsOutput.shp</param>
	<param name="realizNum">The realization that the value corresponds to</param>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.MonteCarlo.ProcessTerminated(System.String)">
	<summary>
 Receives the notification from ModuleRunRemote that the transport process has terminated
 </summary>
	<param name="msg">system error code. 0 means no error</param>
	<remarks>This is meant to notify of process related errors (ie. the process was killed or any serious error)
 When the wrapper executable terminates normally, the error code is 0 regardless of the
 actual calculation result</remarks>
</member><member name="M:ArcNLET_UA.MonteCarlo.CalculationCompleted(System.String)">
	<summary>
 Receives the notification from ModuleRunRemote that the calculation is complete
 </summary>
	<param name="msg">The message. If it is the empty string "", it means there are no
 error messages and the calculation completed sucessfully</param>
</member><member name="M:ArcNLET_UA.MonteCarlo.CurrentDomain_AssemblyResolve(System.Object,System.ResolveEventArgs)">
	<summary>
 Event for the AppDomain AssemblyResolve event.
 </summary>
	<param name="sender"></param>
	<param name="args"></param>
	<returns></returns>
	<remarks>This event works around a .NET bug where the assembly isn't found when
 casting the remoted obeject to its type. The exception thrown when the bug occurs is "Unable to
 cast transparent proxy to type ‘Namespace.Type’"</remarks>
</member><member name="P:ArcNLET_UA.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:ArcNLET_UA.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:ArcNLET_UA.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:ArcNLET_UA.Utilities.featureClassToRasterDataset(ESRI.ArcGIS.Geodatabase.IFeatureClass,System.Single,System.String,System.String,System.String)">
	<summary>
 converts the specified feature class to an Imagine Image file at the given location with the
 specified cell size. The coordinate system will be the same as the coordinate system 
 of the input feature class
 </summary>
	<param name="fc"></param>
	<param name="cellsz"></param>
	<param name="valueField"></param>
	<param name="outputFldr"></param>
	<param name="fname">The file name without extension</param>
	<returns>returns false on error</returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.Utilities.getMaxRasterCellSize(ESRI.ArcGIS.DataSourcesRaster.IRaster2)">
	<summary>
 Returns the maximum cell size of teh given raster.
 </summary>
	<param name="r"></param>
	<returns>If an error occurs, NaN is returned</returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.Utilities.addFieldToFeatureClass(ESRI.ArcGIS.Geodatabase.IFeatureClass,System.String,ESRI.ArcGIS.Geodatabase.esriFieldType)">
	<summary>
 Adds a new field to the attribute table of the specified feature class. If the field
 already exists, it will be deleted and a new one created.
 </summary>
	<param name="fc"></param>
	<param name="fieldName"></param>
	<param name="fieldType"></param>
	<returns>Returns false on error</returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.Utilities.addRasterValueToExistingFeature(ESRI.ArcGIS.Geodatabase.IFeatureClass,System.String,System.Int32,System.String,ESRI.ArcGIS.DataSourcesRaster.IRaster2)">
	<summary>
 writes the value from the given raster to the given field for the point located at the row specified
 by lookupVal. If there are multiple matching entries, the value will be extracted and written
 for all the entries
 </summary>
	<param name="featClass"></param>
	<param name="lookupCol"></param>
	<param name="lookupVal"></param>
	<param name="writeCol"></param>
	<param name="raster"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.Utilities.deleteRasterSafe(ESRI.ArcGIS.DataSourcesRaster.IRaster2,System.String)">
	<summary>
 Attempts to delete the specified raster from disk only if its rasterdataset is located
 in the specified directory
 </summary>
	<param name="r"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.Utilities.createMonitoringPointsFeatureClass(ESRI.ArcGIS.Geodatabase.IWorkspace,System.String,ESRI.ArcGIS.Geodatabase.IFeatureClass,ESRI.ArcGIS.Geometry.esriGeometryType,System.Collections.Generic.List{System.Int32})">
	<summary>
 Creates a shapefile that will hold the measured values of the input and output rasters
 at the given points. If the file already exists in the speficied
 workspace, the existing file is returned
 </summary>
	<param name="fws">The workspace in which to create the feature class</param>
	<param name="fname">The name of the feature class to create (no extension)</param>
	<param name="monitoringPts">The input monitoring points. This feature class will not be changed. The shapes will be will be 
 copied to a new feature class</param>
	<param name="processOnlyTheseRealizations">A list of realizations to process</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.LHS.initLHS(System.String,System.Int32,System.Int32,System.String,System.String)">
	<summary>
 Initializes LHS 
 </summary>
	<param name="title">Title to use for teh LHS Title card in the input file</param>
	<param name="numRealizations">The number of reazliations</param>
	<param name="seed">The random seed</param>
	<param name="outputPath">The path where all files will be saved. It must be empty.</param>
	<param name="realizationSubset">Not implemented</param>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.LHS.initVariables(System.Collections.Hashtable@)">
	<summary>
 initializes the list of random varialbes.
 Each entry in the hashtable must be of type RandomVariable or SpatialRandomVariable.    
 </summary>
	<param name="RandVars">The list of variables</param>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.RandomVariable.#ctor(System.String,ArcNLET_UA.StatDistributions.Distribution,System.Single,System.Single,System.Single)">
	<summary>
 Creates a new RandomVariable
 </summary>
	<param name="name">Variable name</param>
	<param name="distribution">Parameter distribution</param>
	<param name="min">The minimum value of the distribution. If it is invalid for the selected distribution, 
 an exception is thrown</param>
	<param name="max">The maximum value of the distribution</param>
	<param name="mode">The mode of the distribution. If the selected distribution does not require a mode,
 this parameter is ignored</param>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.RandomVariable.RandomSamples">
	<summary>
 Each entry in the array is a sample of the variable.
 This property is set after the sampling procedure has been run
 in the LHS class.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.RandomVariable.Mode">
	<summary>
 The mode of the distribution. If this random variable's distribution
 does not require a mode, NaN is returned
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ArcNLET_UA.RandomVariable">
	<summary>
 Represents a random variable to be used in the uncertainty analysis.
 Sampling of the variable is done by the LHS program
 </summary>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialRandomVariable.OutFieldName">
	<summary>
 Returns an automatically generated name to be used for
 entering the value of the random variable in an attribute table.
 The name is generated based on the variable name and the distribution
 it is guaranteed to be 10 characters or less (shapefile limiatation)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialRandomVariable.ModeFieldName">
	<summary>
 If this variable's distribution does not require the mode, this property
 returns Nothing
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialRandomVariable.Name">
	<summary>
 The name of the random variable
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialRandomVariable.RandomVarList">
	<summary>
 Returns a list of random variables associated with the feature class given by FeatureClass
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialRandomVariable.FeatureClass">
	<summary>
 Returns the featureclass to which the RandomVarList variables correspond to
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ArcNLET_UA.SpatialRandomVariable.FeatureClassFullName">
	<summary>
 Returns the full name and path of the dataset
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ArcNLET_UA.SpatialRandomVariable">
	<summary>
 This is a spatially heterogeneous random variable (i.e random field).
 the random field is a polygon feature class divided into zones.
 Some of those zones may be random variables and others may not be.
 </summary>
	<remarks>Only polygon FeatureClasses in the form of a shapefile are supported as 
 SpatialRandomVariables</remarks>
</member><member name="F:ArcNLET_UA.MainForm.myTraceListener">
	<summary>
 the trace listener object.
 </summary>
	<remarks>
 Should be set either in the class constructor or by the instantiator of this class.  This is used
 to be able to properly unload the trace listener when this form closes (instead of waiting for ArcGIS
 to unload the object).  This avoids problems with multiple instances being run, e.g. closing the app
 and running it again.
 </remarks>
</member><member name="P:ArcNLET_UA.MainForm.LogTextbox">
	<summary>
 The textbox used by the trace listener
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.MainForm.buildRealizationsToProcessList(System.Int32,System.String)">
	<summary>
 Builds a list of realization to process based on a given range. This function
 should be called before running monte carlo
 </summary>
	<param name="numrealizations">The total number of realization</param>
	<param name="rangeString">Two integers, separated by a dash, indicating a subset of the total
 number of realizations. Between 1 and <paramref name="numrealizations"></paramref></param>
	<returns>Nothing on error</returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.MainForm.buildFMRealizationsList(System.Int32,System.String,System.String,System.String)">
	<summary>
builds a list of realizations to keep based on the user's file managment option selection
returns Nothing on error.
this function should be called before running monte carlo. the result of this function
is used by the monte carlo class to determine which realizations to keep
realizations start counting from 1 to stay consistent with the LHS program
 </summary>
	<param name="numrealizations">The total number of realizations</param>
	<param name="filemgmt"></param>
	<param name="filemgmt_n"></param>
	<param name="filemgmt_selected"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ArcNLET_UA.MainForm.writeLog_TraceListenerCallback">
	<summary>
 this method is called by the TraceOutput.TraceListener class
 Its essentially a callback that notifies that the number of lines in the
 textbox has exceeded the predifined number. When this notification is received
 write out the log to a file and clear the textbox to prevent it from getting too big.
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>